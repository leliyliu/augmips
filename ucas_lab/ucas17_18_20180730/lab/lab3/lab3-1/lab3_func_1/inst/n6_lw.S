#include <asm.h>
#include <regdef.h>
#include <inst_test.h>

LEAF(n6_lw_test)
    .set noreorder
    lui  s0, 0x0600
    li  s2, 0x0
###test inst
    TEST_LW(0xc822c7e8, 0x800234c0, 0x000066a8, 0x000066a8, 0xc822c7e8)
    TEST_LW(0x71737c10, 0x8002f660, 0x000002e4, 0x000002e4, 0x71737c10)
    TEST_LW(0x03682420, 0x800224e4, 0x00001680, 0x00001680, 0x03682420)
    TEST_LW(0x6f59f5d3, 0x8002abdc, 0x000001b0, 0x000001b0, 0x6f59f5d3)
    TEST_LW(0x56d90696, 0x800228b4, 0x00001cf4, 0x00001cf4, 0x56d90696)
    TEST_LW(0xeda52048, 0x80024ea8, 0x00002db0, 0x00002db0, 0xeda52048)
    TEST_LW(0x383e8970, 0x80028ae4, 0x00006d88, 0x00006d88, 0x383e8970)
    TEST_LW(0xc4b1feb0, 0x80020cf8, 0x00001288, 0x00001288, 0xc4b1feb0)
    TEST_LW(0xcb6cd8c0, 0x80026db8, 0x00002050, 0x00002050, 0xcb6cd8c0)
    TEST_LW(0x48d355e4, 0x80026b90, 0x00004af0, 0x00004af0, 0x48d355e4)
    TEST_LW(0xd5cfb394, 0x80027f00, 0x00000514, 0x00000514, 0xd5cfb394)
    TEST_LW(0xc01702ce, 0x800202d8, 0x00007cd4, 0x00007cd4, 0xc01702ce)
    TEST_LW(0xa616d1be, 0x800207f0, 0x00000ac4, 0x00000ac4, 0xa616d1be)
    TEST_LW(0xf1456d95, 0x80027754, 0x00001358, 0x00001358, 0xf1456d95)
    TEST_LW(0xb98a0778, 0x80021a74, 0x00003408, 0x00003408, 0xb98a0778)
    TEST_LW(0x76852c0e, 0x8002788c, 0x00000dfc, 0x00000dfc, 0x76852c0e)
    TEST_LW(0x325a52cc, 0x80030000, 0x00001310, 0x00001310, 0x325a52cc)
    TEST_LW(0x848cbadf, 0x80030000, 0x00000828, 0x00000828, 0x848cbadf)
    TEST_LW(0x82ae70d0, 0x80030000, 0x00002524, 0x00002524, 0x82ae70d0)
    TEST_LW(0xc354a660, 0x80030000, 0x00006cf0, 0x00006cf0, 0xc354a660)
    TEST_LW(0x66a38db4, 0x80030000, 0x00002530, 0x00002530, 0x66a38db4)
    TEST_LW(0x13649030, 0x80030000, 0x00005bc4, 0x00005bc4, 0x13649030)
    TEST_LW(0xb7f66e24, 0x80030000, 0x000028b0, 0x000028b0, 0xb7f66e24)
    TEST_LW(0xc268a414, 0x80030000, 0x000059c0, 0x000059c0, 0xc268a414)
    TEST_LW(0x102044e3, 0x80030000, 0x00003d0c, 0x00003d0c, 0x102044e3)
    TEST_LW(0xff0f205f, 0x80030000, 0x00007be0, 0x00007be0, 0xff0f205f)
    TEST_LW(0xe394e882, 0x80030000, 0x00003f00, 0x00003f00, 0xe394e882)
    TEST_LW(0x6b53ef5a, 0x80030000, 0x000031d0, 0x000031d0, 0x6b53ef5a)
    TEST_LW(0xe56fb3a8, 0x80030000, 0x000072ec, 0x000072ec, 0xe56fb3a8)
    TEST_LW(0x6661617c, 0x80030000, 0x00004650, 0x00004650, 0x6661617c)
    TEST_LW(0x2b1ea090, 0x80030000, 0x00000000, 0x00000000, 0x2b1ea090)
    TEST_LW(0xe4a9ee00, 0x80030000, 0x00000000, 0x00000000, 0xe4a9ee00)
    TEST_LW(0x6472d096, 0x80030000, 0x00000000, 0x00000000, 0x6472d096)
    TEST_LW(0xc60dfd1c, 0x80030000, 0x00000000, 0x00000000, 0xc60dfd1c)
    TEST_LW(0xaaa54652, 0x80030000, 0x00000000, 0x00000000, 0xaaa54652)
    TEST_LW(0xfd47929c, 0x80030000, 0x00000000, 0x00000000, 0xfd47929c)
    TEST_LW(0xe40e0b9e, 0x80030000, 0x00000000, 0x00000000, 0xe40e0b9e)
    TEST_LW(0x6bcb55b4, 0x80030000, 0x00000000, 0x00000000, 0x6bcb55b4)
    TEST_LW(0xe6cb2590, 0x80030000, 0x00000000, 0x00000000, 0xe6cb2590)
    TEST_LW(0x3d911cb8, 0x80030000, 0x00000000, 0x00000000, 0x3d911cb8)
    TEST_LW(0xe65874bd, 0x80030000, 0x00000000, 0x00000000, 0xe65874bd)
    TEST_LW(0x3a3c9edc, 0x80030000, 0x00000000, 0x00000000, 0x3a3c9edc)
    TEST_LW(0xbddd406e, 0x80030000, 0x00000000, 0x00000000, 0xbddd406e)
    TEST_LW(0xfe6fb690, 0x80030000, 0x00000000, 0x00000000, 0xfe6fb690)
    TEST_LW(0x941bc8b2, 0x80030000, 0x00000000, 0x00000000, 0x941bc8b2)
    TEST_LW(0x9393289c, 0x80030000, 0x00000000, 0x00000000, 0x9393289c)
    TEST_LW(0x29b2c02d, 0x80030000, 0x00000000, 0x00000000, 0x29b2c02d)
    TEST_LW(0x00000000, 0x80030000, 0x00000000, 0x00000000, 0x00000000)
###detect exception
    bne s2, zero, inst_error
    nop
###score ++
    addiu s3, s3, 1
    NOP
    NOP
    NOP
###output s0|s3
inst_error:  
    or t0, s0, s3 
    NOP
    NOP
    NOP
    sw t0, 0(s1)
    jr ra
    nop
END(n6_lw_test)
